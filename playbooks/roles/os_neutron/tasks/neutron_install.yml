- name: Install yum packages
  yum:
    name: "{{ item }}"
    state: latest
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  with_items: neutron_yum_packages

- name: Install yum packages for LBaaS
  yum:
    name: "{{ item }}"
    state: latest
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  with_items: neutron_lbaas_yum_packages
  when:
    - neutron_lbaas_en | bool

- include: neutron_messaging_setup.yml
- include: neutron_pre_install.yml

- name: Disable L2 population for L3HA support
  set_fact:
    neutron_l2_population: "False"
  when:
    - neutron_plugin_type == 'ml2'
    - groups['neutron_agent'] | length >= 2
    - neutron_services['neutron-linuxbridge-agent']['service_en'] | bool
    - neutron_l2_population is undefined
  tags:
    - neutron-config

- name: Enable L2 population support
  set_fact:
    neutron_l2_population: "True"
  when:
    - neutron_plugin_type == 'ml2'
    - neutron_l2_population is undefined
  tags:
    - neutron-config

- name: Copy neutron config
  config_template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ neutron_system_user_name }}"
    group: "{{ neutron_system_group_name }}"
    mode: "0644"
    config_overrides: "{{ item.config_overrides }}"
    config_type: "{{ item.config_type }}"
  with_items:
    - src: "neutron.conf.j2"
      dest: "/etc/neutron/neutron.conf"
      config_overrides: "{{ neutron_neutron_conf_overrides }}"
      config_type: "ini"
    - src: "{{ neutron_plugins[neutron_plugin_type].plugin_ini }}.j2"
      dest: "/etc/neutron/{{ neutron_plugins[neutron_plugin_type].plugin_ini }}"
      config_overrides: "{{ neutron_plugins[neutron_plugin_type].plugin_conf_ini_overrides }}"
      config_type: "ini"
    - src: "api-paste.ini.j2"
      dest: "/etc/neutron/api-paste.ini"
      config_overrides: "{{ neutron_api_paste_ini_overrides }}"
      config_type: "ini"
    - src: "rootwrap.conf.j2"
      dest: "/etc/neutron/rootwrap.conf"
      config_overrides: "{{ neutron_rootwrap_conf_overrides }}"
      config_type: "ini"
    - src: "policy.json.j2"
      dest: "/etc/neutron/policy.json"
      config_overrides: "{{ neutron_policy_overrides }}"
      config_type: "json"
  notify:
    - Restart neutron services
  tags:
    - neutron-config

- name: Link neutron ml2 config 
  file:
    src: "/etc/neutron/{{ neutron_plugins[neutron_plugin_type].plugin_ini }}" 
    dest: "/etc/neutron/plugin.ini" 
    state: link

- name: Generate neutron dnsmasq Config
  config_template:
    src: "dnsmasq-neutron.conf.j2"
    dest: "/etc/neutron/dnsmasq-neutron.conf"
    owner: "{{ neutron_system_user_name }}"
    group: "{{ neutron_system_group_name }}"
    mode: "0644"
    config_overrides: "{{ neutron_dnsmasq_neutron_conf_overrides }}"
    config_type: "ini"
  notify:
    - Restart neutron services
  when: >
      inventory_hostname in groups['neutron_agent']
  tags:
    - neutron-config

- name: Generate neutron agent only Config
  config_template:
    src: "{{ item.value.service_conf }}.j2"
    dest: "/etc/neutron/{{ item.value.service_conf }}"
    owner: "{{ neutron_system_user_name }}"
    group: "{{ neutron_system_group_name }}"
    mode: "0644"
    config_overrides: "{{ item.value.config_overrides }}"
    config_type: "{{ item.value.config_type }}"
  with_dict: neutron_services
  notify:
    - Restart neutron services
  when:
       - item.value.service_en | bool
       - item.value.service_conf is defined
       - (inventory_hostname in groups['neutron_linuxbridge_agent'])
  tags:
    - neutron-config

- name: Drop neutron Configs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ neutron_system_user_name }}"
    group: "{{ neutron_system_group_name }}"
  with_items:
    - { src: "rootwrap.d/debug.filters", dest: "/etc/neutron/rootwrap.d/debug.filters" }
    - { src: "rootwrap.d/dibbler.filters", dest: "/etc/neutron/rootwrap.d/dibbler.filters" }
    - { src: "rootwrap.d/ipset-firewall.filters", dest: "/etc/neutron/rootwrap.d/ipset-firewall.filters" }
    - { src: "rootwrap.d/iptables-firewall.filters", dest: "/etc/neutron/rootwrap.d/iptables-firewall.filters" }
    - { src: "rootwrap.d/openvswitch-plugin.filters", dest: "/etc/neutron/rootwrap.d/openvswitch-plugin.filters" }
    - { src: "rootwrap.d/lbaas-haproxy.filters", dest: "/etc/neutron/rootwrap.d/lbaas-haproxy.filters" }
    - { src: "rootwrap.d/vpnaas.filters", dest: "/etc/neutron/rootwrap.d/vpnaas.filters" }
    - { src: "rootwrap.d/ebtables.filters", dest: "/etc/neutron/rootwrap.d/ebtables.filters" }
  notify:
    - Restart neutron services
  tags:
    - neutron-config

- name: Drop neutron agent filters
  copy:
    src: "{{ item.value.service_rootwrap }}"
    dest: "/etc/neutron/{{ item.value.service_rootwrap }}"
    owner: "{{ neutron_system_user_name }}"
    group: "{{ neutron_system_group_name }}"
  with_dict: neutron_services
  when:
      - item.value.service_en | bool
      - item.value.service_rootwrap is defined
  notify:
    - Restart neutron services
  tags:
    - neutron_config

