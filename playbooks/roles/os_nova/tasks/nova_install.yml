- name: Install nova
  yum: name={{ item }} state=present
  with_items: nova_yum_packages

- include: nova_messaging_setup.yml

- include: nova_virt_type.yml

- name: Configure nova api file
  template:
    src: "nova.conf.j2"
    dest: "/etc/nova/nova.conf"
    owner: "nova"
    group: "nova"
    mode: "644"
  notify: Restart nova services

- name: create the system group
  group:
    name: "{{ nova_system_group_name }}"
    state: "present"
    system: "yes"

- name: Remove old key file(s) if found
  file:
    path: "{{ item }}"
    state: "absent"
  with_items:
    - "{{ nova_system_home_folder }}/.ssh/authorized_keys"
    - "{{ nova_system_home_folder }}/.ssh/id_rsa"
    - "{{ nova_system_home_folder }}/.ssh/id_rsa.pub"
  when: nova_recreate_keys | bool

- name: Create the nova system user
  user:
    name: "{{ nova_system_user_name }}"
    group: "{{ nova_system_group_name }}"
    comment: "{{ nova_system_comment }}"
    shell: "{{ nova_system_shell }}"
    system: "yes"
    createhome: "yes"
    home: "{{ nova_system_home_folder }}"
    generate_ssh_key: "yes"

- name: Create nova dir
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner|default(nova_system_user_name) }}"
    group: "{{ item.group|default(nova_system_group_name) }}"
    mode: "{{ item.mode|default('0755') }}"
  with_items:
    - { path: "/openstack", mode: "0755", owner: "root", group: "root" }
    - { path: "/etc/nova" }
    - { path: "/etc/nova/rootwrap.d" }
    - { path: "/etc/sudoers.d", mode: "0750", owner: "root", group: "root" }
    - { path: "/var/cache/nova" }
    - { path: "{{ nova_system_home_folder }}" }
    - { path: "{{ nova_system_home_folder }}/.ssh", mode: "0700" }
    - { path: "{{ nova_system_home_folder }}/cache/api" }
    - { path: "{{ nova_system_home_folder }}/instances" }
    - { path: "/var/lock/nova" }
    - { path: "/var/run/nova" }

- name: Test for log directory or link
  shell: |
    if [ -h "/var/log/nova"  ]; then
      chown -h {{ nova_system_user_name }}:{{ nova_system_group_name }} "/var/log/nova"
      chown -R {{ nova_system_user_name }}:{{ nova_system_group_name }} "$(readlink /var/log/nova)"
    else
      exit 1
    fi
  register: log_dir
  failed_when: false
  changed_when: log_dir.rc != 0

- name: Create nova log dir
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner|default(nova_system_user_name) }}"
    group: "{{ item.group|default(nova_system_group_name) }}"
    mode: "{{ item.mode|default('0755') }}"
  with_items:
    - { path: "/var/log/nova" }
  when: log_dir.rc != 0


